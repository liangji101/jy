package com.renren.ntc.video.controllers;

import java.util.ArrayList;
import java.util.List;

import net.paoding.rose.web.annotation.Param;
import net.paoding.rose.web.annotation.Path;
import net.paoding.rose.web.annotation.rest.Get;
import net.paoding.rose.web.annotation.rest.Post;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.beans.factory.annotation.Autowired;

import com.renren.ntc.video.biz.dao.UserDAO;
import com.renren.ntc.video.biz.model.Feed;
import com.renren.ntc.video.biz.model.User;
import com.renren.ntc.video.service.FeedService;
import com.renren.ntc.video.service.RelationShipService;
import com.renren.ntc.video.utils.RedisUtil;

@Path("")
public class ReplyTestController {
	 @Autowired
	 RelationShipService relationShip;
	 
	 @Autowired
	private FeedService feedservice;
	 
	 @Autowired
	 private UserDAO userDAO;
	 
		static Log logger = LogFactory.getLog(ReplyTestController.class);
	 
	@Get("redisListToSet")
	@Post("redisListToSet")
	public String reply(@Param("uid") int uid){
		return null;
//		List<User> allUserList = new ArrayList<User>();
//		allUserList = userDAO.getAllUser();
//		for(User u:allUserList){
//			int i=0;
//			int j=0;
//			String Key  = RedisUtil.generateKey(u.getId(),"SSNEWFED");
//			List<Long> feedIds = feedservice.getNewFeed(u.getId(), 0, 200);
//	        for(long l : feedIds){
//	        	long time =0l;
//	        	Feed f =feedservice.getFeedById(l);
//	        	if(f!=null){
//	        		if(f.getCreateTime() != null){
//	        			time = f.getCreateTime().getTime();
//	        		}
//	        		try{
//	        			RedisUtil.getInstance().zAdd(Key, time, l);
//	        			i++;
//	        		}catch (Exception e){
//	        			logger.info("fail");
//	        		}
//	        	}else{
//	        		j++;
//	        	}
//	        }
//	        logger.info("SetSize   "+ RedisUtil.getInstance().zcount(Key, -1.0, Double.POSITIVE_INFINITY));
//	        logger.info("no time   "+ j);
//		}
//		return "@Success";
	}

}
