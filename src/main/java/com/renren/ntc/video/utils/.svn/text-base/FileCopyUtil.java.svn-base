package com.renren.ntc.video.utils;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.nio.ByteBuffer;
import java.nio.channels.FileChannel;

public class FileCopyUtil {
	
	static private Log logger = LogFactory.getLog(FileCopyUtil.class );

	static int BUFFER_SIZE = 1 * 1024 * 1024;  // 1MB
	
	/**
	 * @param srcFile
	 * @param dstFile
	 * @return
	 * @throws java.io.IOException
	 */
	public static int copy(File srcFile, File dstFile) throws IOException{
		
		
		FileInputStream fis = null;
		FileOutputStream fos = null;
        fis = new FileInputStream(srcFile);
        FileChannel inputChannel = fis.getChannel();
        fos = new FileOutputStream(dstFile);
        FileChannel outputChannel = fos.getChannel();
        ByteBuffer byteBuffer = ByteBuffer.allocate( BUFFER_SIZE );
        
        int bytes = inputChannel.read(byteBuffer);
        
        while(bytes!=-1){
        	
            byteBuffer.flip();
        	outputChannel.write( byteBuffer );
            byteBuffer.clear();
            
            bytes = inputChannel.read(byteBuffer);
            
        }
        
        if( fis!=null ){
            fis.close();
        }
        if ( fos != null ) {
        	fos.close(); 
        }
		return 0;
	}
	
	public static void main(String args[]){
		try {
			copy(new File("/media/Study/Video/Little.Big.Soldier.2010.DVDRip.XviD-XTM/xtm-lbs.avi"), new File("/tmp/little_big.avi"));
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    }
}
