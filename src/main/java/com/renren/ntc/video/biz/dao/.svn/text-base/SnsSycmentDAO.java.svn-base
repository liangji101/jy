package com.renren.ntc.video.biz.dao;

import com.renren.ntc.video.entity.SnsSycment;
import com.renren.ntc.video.utils.Constants;
import net.paoding.rose.jade.annotation.DAO;
import net.paoding.rose.jade.annotation.SQL;

import java.util.List;

/*
* dapeng.zhou
*/
@DAO(catalog = Constants.DB_TOKEN)
public interface SnsSycmentDAO {
	String TABLE = "asyncJob"; 
	String INSERT_FIELDS = "uid,type,vid,content,modify_time,create_time";
	String ALL_FIELDS = "id,uid,type,vid,content,flag,modify_time,create_time";
	
	@SQL("insert into "+TABLE+" ("+INSERT_FIELDS+") values(:1,:2,:3,:4,now(),now())")
	public int add(int uid, String type, long vid, String content);
	
	
	@SQL("insert into "+TABLE+" ("+INSERT_FIELDS+",flag)values(:1,:2,:3,:4,now(),now(),:5)")
	public int add(int uid, String type, long vid, String content, int flag);
	
	@SQL("update "+TABLE+" set flag=:2,modify_time=now() where id=:1")
	public int updateFlag(int id, int flag);
	
	@SQL("select "+ALL_FIELDS+" from "+TABLE+" where flag=:1 order by modify_time  limit :2")
	public SnsSycment getByTime(int flag, int limit);
	
	@SQL("select "+ALL_FIELDS+" from "+TABLE+" where uid=:1")
	public List<SnsSycment> getByUid(int uid);
	
	@SQL("select "+ALL_FIELDS+" from "+TABLE+" where id=:1")
	public SnsSycment getById(int id);
	
	@SQL("select "+ALL_FIELDS+" from "+TABLE+" where vid=:1")
	public List<SnsSycment> getByVid(long vid);
	
	@SQL("update "+TABLE+" set flag=1,modify_time=now() where id=:1")
	public int updateFlagToFail(int id);
	
	@SQL("update "+TABLE+" set flag=2,modify_time=now() where id=:1")
	public int updateFlagToSuccess(int id);

	@SQL("update "+TABLE+" set flag =3 ,modify_time=now() where id=:1")
	public int updateFlagToPending(int id);
	
	@SQL("update "+TABLE+" set flag=:2,modify_time=now() where id=:1")
	public int updateFlagToPending(int id, int flag);

	@SQL("select "+ALL_FIELDS+" from "+TABLE+" where flag >= 3 order by create_time asc limit :1")
	public List<SnsSycment> getPendingJobs(int cout);
	
	@SQL("remove from " + TABLE + " where vid=:1")
	public int removeByShareId(long shareId);
}
