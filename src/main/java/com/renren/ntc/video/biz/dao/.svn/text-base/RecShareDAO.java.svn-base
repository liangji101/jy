package com.renren.ntc.video.biz.dao;

import com.renren.ntc.video.entity.Sharement;
import com.renren.ntc.video.utils.Constants;
import net.paoding.rose.jade.annotation.DAO;
import net.paoding.rose.jade.annotation.SQL;

import java.util.List;

@DAO(catalog = Constants.DB_TOKEN)
public interface RecShareDAO {
    final static String ALL_FIELDS = "id,uid,share_id,content,url_md5,share_type," +
            "comment_count,comment_index,create_time,url,source_id,feed_id,vid,chk,weight";

    @SQL("insert into rec_share("
            + ALL_FIELDS
            + ") "
            + "values(:1.id,:1.uid,:1.shareId,:1.content,:1.urlMd5," +
            ":1.shareType,:1.commentCount,:1.commentIndex," +
            "now(),:1.url,:1.sourceId,:1.feedId,:1.vid,:1.chk,:1.weight)")
    public int addHotShare(Sharement share);

    @SQL("delete from rec_share where id=:1")
    public int delHotShareById(long id);//后台编辑使用id来删除推荐视频，不影响share表，故用id或share_id都可以
    
    //現在的策略是不直接删除，只是将weight值改为-1
    @SQL("update rec_share set weight=-1 where share_id=:1")
    public int delHotShareByShareId(long share_id);
    //用户删除视频后,相对应的rec_share记录也要删除掉

    @SQL("select content from rec_share  where weight!=-1 order by weight desc,create_time desc limit :1,:2")
    public List<String> getRecVideos(int offset, int count);
    
    @SQL("select "+ALL_FIELDS+" from rec_share  where weight!=-1 order by weight desc,create_time desc limit :1,:2")
    public List<Sharement> getRecSharement(int offset, int count);
    
    @SQL("select "+ALL_FIELDS+" from rec_share where share_id!=:1 order by weight desc,create_time desc limit :2,:3")
    public List<Sharement> getRelateSharement(long id, int offset, int count);
    
    @SQL("select "+ ALL_FIELDS+" from rec_share  order by weight desc,create_time desc limit :1,:2")
    public List<Sharement> getRecVideosWeb(int offset, int count);

    @SQL("select "+ ALL_FIELDS + " from rec_share where share_id != :3 order by weight desc,create_time desc limit :1,:2")
    public List<Sharement> getRecVideosExceptOne(int offset, int count, long exceptedShareId);
    
    @SQL("select " + ALL_FIELDS + " from rec_share order by weight desc,create_time desc")
    public List<Sharement> getAllHotVideos();

    @SQL("select " + ALL_FIELDS + " from rec_share where id = :1")
    public Sharement getHotShareById(int id);

    @SQL("select " + ALL_FIELDS + " from rec_share where share_id = :1")
    public Sharement getHotShareByShareId(long share_id);

    @SQL("select count(id) from rec_share where weight!=-1")
	public int countHotShare();
    
    @SQL("update rec_share set weight=:2,create_time=now() where share_id=:1")
    public int updateVideoWeight(int shareId, int weight);
    
    @SQL("select max(weight) from rec_share")
    public int getMaxVideoWeight();
    
    @SQL("update rec_share set content=:2 where share_id=:1")
	public int updateRecShareContent(int shareId, String content);
}
