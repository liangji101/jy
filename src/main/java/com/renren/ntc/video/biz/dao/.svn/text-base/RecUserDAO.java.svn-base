package com.renren.ntc.video.biz.dao;

import com.renren.ntc.video.biz.model.User;
import com.renren.ntc.video.utils.Constants;
import net.paoding.rose.jade.annotation.DAO;
import net.paoding.rose.jade.annotation.SQL;
import net.paoding.rose.jade.annotation.SQLParam;

import java.util.Collection;
import java.util.List;

@DAO(catalog = Constants.DB_TOKEN)
public interface RecUserDAO {
	String FIELD_PK               = "id";
    String FIELDS_WITHOUT_PK      = "name,password,email,headurl , att_privacy,weight";
	String FIELDS_ALL             = FIELD_PK + "," + FIELDS_WITHOUT_PK;
	
	@SQL("select " + FIELDS_ALL + " from " + "rec_user" + " where id in (:1) order by weight desc,create_time desc")
	    public List<User> queryAllList(Collection<Integer> ids);
	
	@SQL("select id from rec_user where id!=:3  order by weight desc,create_time desc limit :1,:2" )
	public List<Integer> getHotUsersId(int offset, int count, int uid);
	
    @SQL("select id from rec_user order by weight desc")
	public List<Integer> getAllHotUsersId();
    
    @SQL("select "+FIELDS_ALL+" from rec_user where id=:1")
    public User getHotUserById(int id);
    
    @SQL("select "+FIELDS_ALL+" from rec_user where id!=:1 order by weight desc,create_time desc")
    public List<User> getHotUsers(int id);
    
    @SQL("delete from rec_user where id=:1")
    public int delHotUserById(int id);
    
    @SQL("insert ignore into "
            + "rec_user"
            + " ("
            + "id,name,password,email,headurl,weight"
            + ") VALUES (:model.id,:model.name,:model.password,:model.email,:model.headurl,:model.weight)")
    public int saveHotUser(@SQLParam("model") User model);
    
    @SQL("select count(id) from rec_user")
    public int countHotUser();
    
    @SQL("select count(id) from rec_user where id not in (:1)")
    public int countNotAttentionHotUser(Collection<Integer> attentionList);
    

    @SQL("select "+FIELDS_ALL+" from rec_user where id!=:3   order by weight desc,create_time desc limit :1,:2")
    public List<User> getHotUsers(int offset, int count, int uid);
    
    
    @SQL("select count(id) from rec_user")
    public int getHotUserCount();
    
    @SQL("select "+FIELDS_ALL+" from rec_user where id not in (:3)  order by weight desc,create_time desc  limit :1,:2")
    public List<User> getHotUsersWeb(int offset, int count, Collection<Integer> attentions);
    
    @SQL("select "+FIELDS_ALL+" from rec_user order by weight desc,create_time desc ")
    public List<User> getAllHotUsers();
    
    @SQL("update rec_user set weight=:2 where id=:1")
    public int updateUserWeight(int uid, int weight);
    
    @SQL("select max(weight) from rec_user")
    public int getMaxUserWeight();
    
    @SQL("update rec_user set name=:1.name,password=:1.password,headurl=:1.headurl," +
    		"att_privacy=:1.attPrivacy where id=:1.id")
    public int updateWithUserUpdate(User user);
    
    @SQL("update rec_user set headurl=:2 where id=:1")
    public int updateHeadurl(int uid, String headurl);
}
