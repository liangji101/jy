package com.renren.ntc.video.entity;

import com.renren.ntc.video.formbean.Video;
import com.renren.ntc.video.constants.VideoPrivacy;
import com.renren.searchengine.zkmanager2.Node;

import org.apache.commons.beanutils.BeanMap;
import org.json.JSONObject;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.io.Serializable;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

/**
 * 
 * @author dapeng.zhou email:dapeng.zhou@renren-inc.com
 * 
 */

public class Sharement implements Serializable {
	
	private static final Logger logger = LoggerFactory.getLogger(Sharement.class);
	
	public int getCommentcount() {
		return commentcount;
	}

	public void setCommentcount(int commentcount) {
		this.commentcount = commentcount;
	}

	private long id;
	private int uid;
	private long shareId;
	private String content;
	private String url;
	private String urlMd5;
	private byte shareType;
	private long sourceId;
	private int commentcount;
	private String commentIndex;
	//default y 
	private String chk ;//y表示审核过的
	private Date createTime;
	private long feedId;
	private long vid;
	private int del;

    /**
     * 视频权限
     */
    private int privacy;

	private Video video;
	
	//供后台编辑热门视频时使用，不保存在share表，只保存在rec_share表
	private int weight;
	//供后台编辑热门视频时使用，不保存到数据库
	private String ownerName;
	//供后台编辑热门视频查询时使用，不保存到数据库,0表示不是热门视频，1表示是热门视频
	private int isHot;

	public int getIsHot() {
		return isHot;
	}

	public void setIsHot(int isHot) {
		this.isHot = isHot;
	}

	public int getWeight() {
		return weight;
	}

	public String getOwnerName() {
		return ownerName;
	}

	public void setOwnerName(String ownerName) {
		this.ownerName = ownerName;
	}

	public void setWeight(int weight) {
		this.weight = weight;
	}

	public String getChk() {
		return chk;
	}

	public void setChk(String chk) {
		this.chk = chk;
	}

	

	public void setSourceId(long sourceId) {
		this.sourceId = sourceId;
	}

	public long getSourceId() {
		return sourceId;
	}

	public long getId() {
		return id;
	}

	public void setId(long id) {
		this.id = id;
	}

	public String getUrl() {
		return url;
	}

	public void setUrl(String url) {
		this.url = url;
	}

	public int getUid() {
		return uid;
	}

	public void setUid(int uid) {
		this.uid = uid;
	}

	public long getShareId() {
		return shareId;
	}

	public void setShareId(long shareId) {
		this.shareId = shareId;
	}

	public long getFeedId() {
		return feedId;
	}

	public void setFeedId(long feedId) {
		this.feedId = feedId;
	}

	public String getContent() {
		return content;
	}

	public void setContent(String content) {
		this.content = content;
	}

	public String getUrlMd5() {
		return urlMd5;
	}

	public void setUrlMd5(String urlMd5) {
		this.urlMd5 = urlMd5;
	}

	public byte getShareType() {
		return shareType;
	}

	public void setShareType(byte shareType) {
		this.shareType = shareType;
	}

	public int getCommentCount() {
		return commentcount;
	}

	public void setCommentCount(int commentcount) {
		this.commentcount = commentcount;
	}

	public Date getCreateTime() {
		return createTime;
	}

	public void setCreateTime(Date createTime) {
		this.createTime = createTime;
	}

	public String getCommentIndex() {
		return commentIndex;
	}

	public void setCommentIndex(String commentIndex) {
		this.commentIndex = commentIndex;
	}

	public void setVid(long vid) {
		this.vid = vid;

	}

	public long getVid() {
		return this.vid;
	}

    public int getPrivacy() {
        return privacy;
    }

    public void setPrivacy(int privacy) {
        if(0 <= privacy && privacy <= VideoPrivacy.values().length - 1) {
            this.privacy = privacy;
        } else {
            this.privacy = VideoPrivacy.PRIVATE.ordinal();
        }
    }

    public VideoPrivacy getVideoPrivacy() {
        return VideoPrivacy.fromInt(privacy);
    }
	
	public Video getVideo() {
        if(this.video == null) {
            this.video = new Video();
            try {
                JSONObject videoJson = new JSONObject(this.content);
                @SuppressWarnings("rawtypes")
                Iterator it = videoJson.keys();
                BeanMap videoBean = new BeanMap(video);
                while (it.hasNext()) {
                    Object key = it.next();
                    videoBean.put(key, videoJson.get(key.toString()));
                }
                if(videoBean.get("cover_height")==null){
                    videoBean.put("cover_height", 640);
                }
                if(videoBean.get("cover_width")==null){
                    videoBean.put("cover_height", 480);
                }
                this.video = (Video) videoBean.getBean();
            } catch (ParseException e) {
                e.printStackTrace();
            } catch (Exception e) {
                logger.error("解析content异常", e);
            }
        }
		return video;
	}

	public static void main(String[] args) {

//		System.out.println(""+new java.text.SimpleDateFormat("yyyy MM-dd HH:mm:ss").format(new java.util.Date (1341903361119L)));
			
		String s ="测试一下看看一个汉字多长";
	//	System.out.println(s.length());
//		Sharement s = new Sharement();
//		s.setContent(" {\"playUrl\":\"http://vxml.56.com/mobile/69833578/?src=3gapi\",\"cover\":\"http://img.v155.56.com/images/19/7/rr943204i56olo56i56.com_mb_134094927383hd_m.jpg\",\"title\":\"高富帅\",\"video_md5\":\"暂时未实现\",\"desc\":\"太感人了\",\"en_type\":\"1\",\"en_id\":45454,\"cover_height\":640,\"cover_width\":480 }");
//		// s.setContent("{\"input\":\"input\",\"title\":\"title\"}");
//		System.out.println(s.getVideo().getCover_height());
//		System.out.println(s.getVideo().getCover_width());
		Map<String, List<Integer>> map = new HashMap<String, List<Integer>>();
		List<Integer> list = new ArrayList<Integer>();
		list.add(1);
		list.add(2);
		map.put("aa", list);
		List<Integer> a = map.get("aa");
		a.add(3);
		System.out.println(map.get("aa"));
}

	public int getDel() {
		return del;
	}

	public void setDel(int del) {
		this.del = del;
	}

}
